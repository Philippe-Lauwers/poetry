/* Stylesheet that controls the general layout of the Writing Assistant Interface */

:root {
    --borderColor: #003153; /* borderColor blue color */
}

/* Overall container uses column direction */
.container {
    display: flex;
    flex-direction: column;
    height: 100%;
    background: #e6f4ff;
}

/* Top pane (header) */
.top-pane {
    /* 1st layer = icon on top, 2nd = halo behind */
    background-image: url("../img/icon.svg"),
    radial-gradient(
            farthest-corner at 1% 50%,
            rgba(255, 255, 255, 1) 5%,
            rgba(255, 255, 255, 0.8) 10%,
            rgba(255, 255, 255, 0.7) 20%,
            rgba(255, 255, 255, 0.1) 100%
    );
    background-repeat: no-repeat,
    no-repeat;
    background-position: left center,
    left center;
    background-size: auto 100%,
    100% 250%;
    background-origin: content-box,
    padding-box;

    background-color: #c4c4c4;
    padding: 1rem;
    margin: 0.4rem 0.4rem 0.2rem 0.4rem;
    border: 1px solid var(--borderColor);
    border-radius: 0.6rem;
    flex: 0 0 auto;
}

/* Bottom area fills remaining space */
.bottom-pane {
    padding-bottom: 0.4rem;
    display: flex;
    flex: 1 1 auto;
    min-height: 0;
    min-height: 0;
}

/* Left pane */
.left-pane {
    background: #ffffff;
    flex: 0 0 20%;
    overflow: auto;

    /* appearance of this pane */
    margin: 0.2rem 0.2rem 0.2rem 0.4rem;
    border: 1px solid var(--borderColor);
    border-radius: 0.6rem;
}

.right-pane {
    background: #ffffff;
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    /* appearance */
    margin: 0.2rem 0.4rem 0.2rem 0.2rem;
    border: 1px solid var(--borderColor);
    border-radius: 0.6rem;
}


#sandbox, #parambox {
    margin: 0rem 0.1rem 0.1rem 0.1rem;
    flex: 1 1 auto;
    min-height: 0;
    min-height: 0;
}

#sandbox {
    padding-bottom: 1rem;
}

html, body {
    height: 100%;
    margin: 0;
}

/* kill default body-margin */
#poemForm, .container {
    height: 100%;
}

/* 100 % all the way down   */
div {
    margin: 0;
}

input {
    caret-color: var(--borderColor);
}

input[type="checkbox"] {
    /* strip out the native box */
    appearance: none;
    -webkit-appearance: none;

    /* keep the real element just for the border & size */
    width: 1rem;
    height: 1rem;
    margin-right: 0.5rem;
    border: 2px solid var(--borderColor);
    border-radius: 0.2rem;
    position: relative;
    cursor: pointer;
    background: transparent;
}

/* draw the “fill” in a ::before layer */
input[type="checkbox"]::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    background: transparent;
    transition: filter 0.2s, background-color 0.2s;
    pointer-events: none;
}

/* hover: brighten & saturate *only* the background layer */
input[type="checkbox"]:hover::before {
    background-color: #d4d4d4;
    filter: brightness(1.1) saturate(1.2);
}

/* checked: set the fill color */
input[type="checkbox"]:checked::before {
    background-color: var(--borderColor);
    filter: none;
}

/* checked mark stays the same */
input[type="checkbox"]:checked::after {
    content: "✔";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    pointer-events: none;
}

input[type="checkbox"].read-only {
    border-color: #c4c4c4;
    cursor: not-allowed;
}

input[type="checkbox"].read-only::before {
    background-color: #d4d4d4;
    filter: none;
}

input[type="checkbox"].read-only + label {
    color: #c4c4c4;
    cursor: not-allowed;
}


.btn {
    width: 28px;
    height: 28px;
    padding: 0;
    border: none;
    background-repeat: no-repeat;
    background-position: 0 0;
    background-size: 86px 28px;
}

.btn:hover,
.btn:focus {
    background-position: -29px 0;
}

.btn:disabled {
    background-position: -58px 0;
}